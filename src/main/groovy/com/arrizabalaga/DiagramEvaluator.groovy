package com.arrizabalaga
/*
 * This Groovy source file was auto generated by running 'gradle buildInit --type groovy-library'
 * by 'arrizabalaga' at '6/26/14 11:55 PM' with Gradle 1.12
 *
 * @author arrizabalaga, @date 6/26/14 11:55 PM
 */
class DiagramEvaluator {
    Node root
    int numMovements
    boolean debug

    DiagramEvaluator(Node root){
        this.root=root
        this.numMovements=0
        this.debug=false
    }

    DiagramEvaluator(Node root,boolean debug){
        this(root)
        this.debug=debug
    }

    boolean evaluate(String input) {
        int inputSize=input.size()
        Node currentNode=this.root
        //DEBUG
        if(this.debug){
            println("Evaluating...\n[$input]\n${currentNode.name}")
        }
        //CASE: already in END
        if(this.isTheEnd(currentNode)){
            return true
        }
        //While input & not finish
        for(int i=0;i<inputSize;i++){
            //Take current value
            char iChar= this.nextInput(input,i)
            //Move diagram
            currentNode=this.move(currentNode,iChar)
            //Eval finish
            if(this.isTheEnd(currentNode)){
                return true
            }
        }
        return false
    }

    char nextInput(String input,int i){
        return  input.charAt(i)
    }

    Node move(Node currentNode,char iChar){
        Node result
        if(iChar=='0'){
            result=currentNode.zero
        }else if (iChar=='1'){
            result=currentNode.one
        }else{
            throw new Exception("Unexpected value: ${iChar}. Only 0|1 accepted")
        }
        if(this.debug){
            println "---${iChar}--->${result.name}"
        }
        this.numMovements++
        return result
    }

    boolean isTheEnd(Node currentNode){
        if(!currentNode){
            throw new Exception("No path to follow")
        }
        return currentNode.isTheEnd()
    }

}
